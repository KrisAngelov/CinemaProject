@using BusinessLayer;
@using DataLayer;
@using Microsoft.AspNetCore.Identity;

@inject SignInManager<User> signInManager
@inject UserManager<User> userManager
@inject IdentityContext identityContext

@model IEnumerable<BusinessLayer.Showtime>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


@if (signInManager.IsSignedIn(User))
{
    @if (identityContext.IsUserAdmin(await userManager.FindByNameAsync(User.Identity.Name)))
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hall)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Movie.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Hall.Id)
            </td>
            <td>
                @if (signInManager.IsSignedIn(User))
                {
                    @if (identityContext.IsUserAdmin(await userManager.FindByNameAsync(User.Identity.Name)))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                }             
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>                    
            </td>
        </tr>
}
    </tbody>
</table>
